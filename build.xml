<?xml version="1.0" encoding="UTF-8"?>
<project name="demo-build-tools" default="jar" basedir=".">
    <!-- Project properties -->
    <property name="src.dir" value="src/main/java" />
    <property name="test.src.dir" value="src/test/java" />
    <property name="build.dir" value="ant-build" />
    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="test.classes.dir" value="${build.dir}/test-classes" />
    <property name="jar.dir" value="${build.dir}/jar" />
    <property name="lib.dir" value="lib" />
    <property name="test.reports.dir" value="${build.dir}/test-reports" />
    <property name="main.class" value="com.example.demo.App" />
    
    <!-- Define the classpath -->
    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar" />
    </path>
    
    <path id="test.classpath">
        <path refid="classpath" />
        <pathelement location="${classes.dir}" />
        <fileset dir="${lib.dir}" includes="**/*.jar" />
    </path>
    
    <!-- Create directories -->
    <target name="init">
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${test.classes.dir}" />
        <mkdir dir="${jar.dir}" />
        <mkdir dir="${lib.dir}" />
        <mkdir dir="${test.reports.dir}" />
        <!-- Download JUnit jar if not present -->
        <available file="${lib.dir}/junit-4.13.2.jar" property="junit.present" />
        <antcall target="get-junit" />
        <available file="${lib.dir}/hamcrest-core-1.3.jar" property="hamcrest.present" />
        <antcall target="get-hamcrest" />
    </target>
    
    <!-- Download JUnit jar -->
    <target name="get-junit" unless="junit.present">
        <get src="https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar" 
             dest="${lib.dir}/junit-4.13.2.jar" />
    </target>
    
    <!-- Download Hamcrest jar -->
    <target name="get-hamcrest" unless="hamcrest.present">
        <get src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" 
             dest="${lib.dir}/hamcrest-core-1.3.jar" />
    </target>

    <!-- Clean build directories -->
    <target name="clean">
        <delete dir="${build.dir}" />
    </target>
    
    <!-- Compile source code -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false">
            <classpath refid="classpath" />
        </javac>
    </target>
    
    <!-- Compile test code -->
    <target name="compile-tests" depends="compile">
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" includeantruntime="false">
            <classpath refid="test.classpath" />
        </javac>
    </target>
    
    <!-- Run tests -->
    <target name="test" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <path refid="test.classpath" />
                <pathelement location="${test.classes.dir}" />
            </classpath>
            <formatter type="plain" usefile="false" />
            <formatter type="xml" />
            <batchtest fork="yes" todir="${test.reports.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <!-- Create JAR -->
    <target name="jar" depends="compile">
        <jar destfile="${jar.dir}/${ant.project.name}.jar">
            <fileset dir="${classes.dir}" />
            <manifest>
                <attribute name="Main-Class" value="${main.class}" />
            </manifest>
        </jar>
    </target>
    
    <!-- Create Fat JAR with dependencies -->
    <target name="fatjar" depends="compile">
        <jar destfile="${jar.dir}/${ant.project.name}-with-dependencies.jar">
            <fileset dir="${classes.dir}" />
            <zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
            <manifest>
                <attribute name="Main-Class" value="${main.class}" />
            </manifest>
        </jar>
    </target>
    
    <!-- Run application -->
    <target name="run" depends="jar">
        <java classname="${main.class}" fork="true">
            <classpath>
                <path refid="classpath" />
                <pathelement location="${jar.dir}/${ant.project.name}.jar" />
            </classpath>
        </java>
    </target>
    
    <!-- Default target - full build lifecycle -->
    <target name="all" depends="clean, compile, test, jar" description="Clean, compile, test, and build jar" />
</project>
